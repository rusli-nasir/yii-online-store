<?php

/**
 * Company: ToXSL Technologies Pvt. Ltd. < www.toxsl.com >
 * Author : Shiv Charan Panjeta < shiv@toxsl.com >
 */

/**
 * This is the model base class for the table "{{var_product}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "VarProduct".
 *
 * Columns in table "{{var_product}}" available as properties of the model,
 * followed by relations of table "{{var_product}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $sku
 * @property integer $product_id
 * @property integer $color_id
 * @property integer $size_id
 * @property integer $brand_id
 * @property integer $quantity
 * @property string $price
 * @property string $discount_price
 * @property integer $type_id
 * @property integer $state_id
 * @property integer $create_user_id
 * @property string $create_time
 *
 * @property Brand $brand
 * @property Color $color
 * @property User $createUser
 * @property Product $product
 * @property Size $size
 */
abstract class BaseVarProduct extends ActiveRecord {
	public static function getTypeOptions($id = null) {
		$list = array (
				"TYPE1",
				"TYPE2",
				"TYPE3" 
		);
		if ($id === null)
			return $list;
		if (is_numeric ( $id ))
			return $list [$id % count ( $list )];
		return $id;
	}
	public static function getStatusOptions($id = null) {
		$list = array (
				"Draft",
				"Active",
				"Closed" 
		);
		if ($id === null)
			return $list;
		if (is_numeric ( $id ))
			return $list [$id % count ( $list )];
		return $id;
	}
	public function beforeValidate() {
		if ($this->isNewRecord) {
			if (! isset ( $this->create_user_id ))
				$this->create_user_id = Yii::app ()->user->id;
			if (! isset ( $this->create_time ))
				$this->create_time = date ( 'Y-m-d H:i:s' );
		} else {
		}
		return parent::beforeValidate ();
	}
	public static function model($className = __CLASS__) {
		return parent::model ( $className );
	}
	public function tableName() {
		return '{{var_product}}';
	}
	public static function label($n = 1) {
		return Yii::t ( 'app', 'var product|var products', $n );
	}
	public static function representingColumn() {
		return 'price';
	}
	public function rules() {
		return array (
				array (
						'product_id, color_id, size_id, brand_id, quantity, price, create_user_id, create_time',
						'required' 
				),
				array (
						'product_id, color_id, size_id, brand_id, quantity, type_id, state_id, create_user_id',
						'numerical',
						'integerOnly' => true 
				),
				array (
						'sku, price, discount_price',
						'length',
						'max' => 255 
				),
				array (
						'sku',
						'default',
						'setOnEmpty' => true,
						'value' => null 
				),
				array (
						'id, sku, product_id, color_id, size_id, brand_id, quantity, price, discount_price, type_id, state_id, create_user_id, create_time',
						'safe',
						'on' => 'search' 
				) 
		);
	}
	public function relations() {
		return array (
				'brand' => array (
						self::BELONGS_TO,
						'Brand',
						'brand_id' 
				),
				'color' => array (
						self::BELONGS_TO,
						'Color',
						'color_id' 
				),
				'createUser' => array (
						self::BELONGS_TO,
						'User',
						'create_user_id' 
				),
				'product' => array (
						self::BELONGS_TO,
						'Product',
						'product_id' 
				),
				'size' => array (
						self::BELONGS_TO,
						'Size',
						'size_id' 
				) 
		);
	}
	public function pivotModels() {
		return array ();
	}
	public function attributeLabels() {
		return array (
				'id' => Yii::t ( 'app', 'ID' ),
				'sku' => Yii::t ( 'app', 'sku' ),
				'product_id' => null,
				'color_id' => null,
				'size_id' => null,
				'brand_id' => null,
				'quantity' => Yii::t ( 'app', 'quantity' ),
				'price' => Yii::t ( 'app', 'price' ),
				'discount_price' => Yii::t ( 'app', 'discount price' ),
				'type_id' => Yii::t ( 'app', 'type' ),
				'state_id' => Yii::t ( 'app', 'state' ),
				'create_user_id' => null,
				'create_time' => Yii::t ( 'app', 'create time' ),
				'brand' => null,
				'color' => null,
				'createUser' => null,
				'product' => null,
				'size' => null 
		);
	}
	public function search() {
		$criteria = new CDbCriteria ();
		
		$criteria->compare ( 'id', $this->id );
		$criteria->compare ( 'sku', $this->sku, true );
		$criteria->compare ( 'product_id', $this->product_id );
		$criteria->compare ( 'color_id', $this->color_id );
		$criteria->compare ( 'size_id', $this->size_id );
		$criteria->compare ( 'brand_id', $this->brand_id );
		$criteria->compare ( 'quantity', $this->quantity );
		$criteria->compare ( 'price', $this->price, true );
		$criteria->compare ( 'discount_price', $this->discount_price, true );
		$criteria->compare ( 'type_id', $this->type_id );
		$criteria->compare ( 'state_id', $this->state_id );
		$criteria->compare ( 'create_user_id', $this->create_user_id );
		$criteria->compare ( 'create_time', $this->create_time, true );
		
		return new CActiveDataProvider ( $this, array (
				'criteria' => $criteria,
				'pagination' => array (
						'pagesize' => 20 
				) 
		) );
	}
}