<?php

/**
 * Company: ToXSL Technologies Pvt. Ltd. < www.toxsl.com >
 * Author : Shiv Charan Panjeta < shiv@toxsl.com >
 */
 
/**
 * This is the model base class for the table "{{user_address}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserAddress".
 *
 * Columns in table "{{user_address}}" available as properties of the model,
 * followed by relations of table "{{user_address}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $bulding_name
 * @property string $street_add
 * @property string $suburb
 * @property integer $postcode
 * @property string $_state
 * @property string $country
 * @property string $bulding_name1
 * @property string $street_add1
 * @property string $suburb1
 * @property integer $postcode1
 * @property string $_state1
 * @property string $country1
 * @property string $lat
 * @property string $long
 * @property integer $state_id
 * @property integer $is_same
 * @property string $create_time
 * @property string $update_time
 * @property integer $create_user_id
 *
 * @property Order[] $orders
 * @property Order[] $orders1
 * @property User $createUser
 */
abstract class BaseUserAddress extends ActiveRecord {

	public $search;
	
	public static function getStatusOptions($id = null)
	{
		$list = array("Draft","Published","Archive");
		if ($id == null )	return $list;
		if ( is_numeric( $id )) return $list [ $id ];
		return $id;
	}	
	public function beforeValidate()
	{
		if($this->isNewRecord)
		{
			if ( !isset( $this->create_time )) $this->create_time = new CDbExpression('NOW()');
				if ( !isset( $this->create_user_id )) $this->create_user_id = Yii::app()->user->id;			
	}else{
					}
		return parent::beforeValidate();
	}

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{user_address}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'shipping address|shipping addresses', $n);
	}

	public static function representingColumn() {
		return 'bulding_name';
	}

	public function rules() {
		return array(
			array('bulding_name,street_add,suburb,postcode,create_user_id', 'required'),
			array('postcode, postcode1, state_id, is_same, create_user_id', 'numerical', 'integerOnly'=>true),
			array('bulding_name, street_add, suburb, _state, country, bulding_name1, street_add1, suburb1, _state1, country1', 'length', 'max'=>256),
			array('lat, long', 'length', 'max'=>64),
			array('create_time, update_time, shop_location', 'safe'),
			array('bulding_name, street_add, suburb, postcode, _state, country, bulding_name1, street_add1, suburb1, postcode1, _state1, country1, lat, long, state_id, is_same, create_time, update_time', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, bulding_name, street_add, suburb, postcode, _state, country, bulding_name1, street_add1, suburb1, postcode1, _state1, country1, lat, long, state_id, is_same, create_time, update_time, create_user_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'createUser' => array(self::BELONGS_TO, 'User', 'create_user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'bulding_name' => Yii::t('app', 'bulding name'),
			'street_add' => Yii::t('app', 'street address'),
			'suburb' => Yii::t('app', 'suburb'),
			'postcode' => Yii::t('app', 'postcode'),
			'_state' => Yii::t('app', 'state'),
			'country' => Yii::t('app', 'country'),
			'bulding_name1' => Yii::t('app', 'bulding Name'),
			'street_add1' => Yii::t('app', 'street address'),
			'suburb1' => Yii::t('app', 'suburb'),
			'postcode1' => Yii::t('app', 'postcode'),
			'_state1' => Yii::t('app', 'state'),
			'country1' => Yii::t('app', 'country'),
			'lat' => Yii::t('app', 'lat'),
			'long' => Yii::t('app', 'long'),
			'state_id' => Yii::t('app', 'state'),
			'is_same' => Yii::t('app', 'is same'),
			'create_time' => Yii::t('app', 'create time'),
			'update_time' => Yii::t('app', 'update time'),
			'create_user_id' => null,
			'orders' => null,
			'orders1' => null,
			'createUser' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
		$criteria->compare('id', $this->id);
		$criteria->compare('bulding_name', $this->bulding_name, true);
		$criteria->compare('street_add', $this->street_add, true);
		$criteria->compare('suburb', $this->suburb, true);
		$criteria->compare('postcode', $this->postcode);
		$criteria->compare('_state', $this->_state, true);
		$criteria->compare('country', $this->country, true);
		$criteria->compare('bulding_name1', $this->bulding_name1, true);
		$criteria->compare('street_add1', $this->street_add1, true);
		$criteria->compare('suburb1', $this->suburb1, true);
		$criteria->compare('postcode1', $this->postcode1);
		$criteria->compare('_state1', $this->_state1, true);
		$criteria->compare('country1', $this->country, true);
		$criteria->compare('lat', $this->lat, true);
		$criteria->compare('long', $this->long, true);
		$criteria->compare('state_id', $this->state_id);
		$criteria->compare('is_same', $this->is_same);
		$criteria->compare('create_time', $this->create_time, true);
		$criteria->compare('update_time', $this->update_time, true);
		$criteria->compare('create_user_id', $this->create_user_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}