<?php

/**
 * Company: ToXSL Technologies Pvt. Ltd. < www.toxsl.com >
 * Author : Shiv Charan Panjeta < shiv@toxsl.com >
 */
 
/**
 * This is the model base class for the table "{{feed}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Feed".
 *
 * Columns in table "{{feed}}" available as properties of the model,
 * followed by relations of table "{{feed}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $content
 * @property integer $state_id
 * @property integer $type_id
 * @property string $model_type
 * @property integer $model_id
 * @property integer $project_id
 * @property string $create_time
 * @property integer $create_user_id
 *
 * @property User $createUser
 */
abstract class BaseFeed extends ActiveRecord {

    const TYPE_HR = 1;
    const TYPE_DEVELOPER = 3;
    const TYPE_IT = 4;
    const TYPE_BDE = 5;
    const TYPE_ADMIN = 6;
	
	public static function getStatusOptions($id = null)
	{
		$list = array("Draft","Published","Archive");
		if ($id == null )	return $list;
		if ( is_numeric( $id )) return $list [ $id ];
		return $id;
	}	
	public static function getTypeOptions($id = null)
	{
		$list = array("TYPE1","TYPE2","TYPE3");
		if ($id == null )	return $list;
		if ( is_numeric( $id )) return $list [ $id ];
		return $id;
	}
 	public function beforeValidate()
	{
		if($this->isNewRecord)
		{
			if ( !isset( $this->create_time )) $this->create_time = date( 'Y-m-d H:i:s');
			if ( !isset( $this->create_user_id )) $this->create_user_id = Yii::app()->user->id;			
	}else{
				}
		return parent::beforeValidate();
	}

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{feed}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Feed|Feeds', $n);
	}

	public static function representingColumn() {
		return 'model_type';
	}

	public function rules() {
		return array(
			array('model_type, model_id', 'required'),
			array('state_id, type_id, model_id, project_id, create_user_id', 'numerical', 'integerOnly'=>true),
			array('model_type', 'length', 'max'=>128),
			array('content, create_time', 'safe'),
			array('content, state_id, type_id, project_id, create_time, create_user_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, content, state_id, type_id, model_type, model_id, project_id, create_time, create_user_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'createUser' => array(self::BELONGS_TO, 'User', 'create_user_id'),
			'project' => array(self::BELONGS_TO, 'Project', 'project_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'content' => Yii::t('app', 'content'),
			'state_id' => Yii::t('app', 'state'),
			'type_id' => Yii::t('app', 'type'),
			'model_type' => Yii::t('app', 'model type'),
			'model_id' => Yii::t('app', 'model'),
			'project_id' => Yii::t('app', 'project'),
			'create_time' => Yii::t('app', 'created on'),
			'create_user_id' => null,
			'createUser' =>  Yii::t ( 'app', 'created by' ),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('content', $this->content, true);
		$criteria->compare('state_id', $this->state_id);
		$criteria->compare('type_id', $this->type_id);
		$criteria->compare('model_type', $this->model_type, true);
		$criteria->compare('model_id', $this->model_id);
		$criteria->compare('project_id', $this->project_id);
		$criteria->compare('create_time', $this->create_time, true);
		if(!Yii::app()->user->isAdmin){
			$criteria->compare('create_user_id', Yii::app()->user->id);
		}else{
			$criteria->compare('create_user_id', $this->create_user_id);
		}

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}