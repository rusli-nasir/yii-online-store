<?php

/**
 * Company: ToXSL Technologies Pvt. Ltd. < www.toxsl.com >
 * Author : Shiv Charan Panjeta < shiv@toxsl.com >
 */
 
/**
 * This is the model base class for the table "ser_transaction".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Transaction".
 *
 * Columns in table "ser_transaction" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $transaction_id
 * @property integer $task_id
 * @property string $amount
 * @property integer $user_id
 * @property string $txn_dt
 *
 */
abstract class BaseTransaction extends ActiveRecord {

	public function beforeValidate()
	{
		if($this->isNewRecord)
		{
			if ( !isset( $this->user_id )) $this->user_id = Yii::app()->user->id;			
	}else{
			}
		return parent::beforeValidate();
	}

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'ser_transaction';
	}

	public static function label($n = 1) {
			return Yii::t('app', 'Transaction|Transactions', $n);
	}

	public static function representingColumn() {
		return 'transaction_id';
	}

	public function rules() {
		return array(
			array('transaction_id, task_id, amount, user_id, txn_dt', 'required'),
			array('task_id, user_id', 'numerical', 'integerOnly'=>true),
			array('transaction_id', 'length', 'max'=>100),
			array('amount', 'length', 'max'=>8),
			array('id, transaction_id, task_id, amount, user_id, txn_dt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'transaction_id' => Yii::t('app', 'Transaction'),
			'task_id' => Yii::t('app', 'Task'),
			'amount' => Yii::t('app', 'Amount'),
			'user_id' => Yii::t('app', 'User'),
			'txn_dt' => Yii::t('app', 'Txn Dt'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('transaction_id', $this->transaction_id, true);
		$criteria->compare('task_id', $this->task_id);
		$criteria->compare('amount', $this->amount, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('txn_dt', $this->txn_dt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}