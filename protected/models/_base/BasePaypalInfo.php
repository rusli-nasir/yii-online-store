<?php

/**
 * Company: ToXSL Technologies Pvt. Ltd. < www.toxsl.com >
 * Author : Shiv Charan Panjeta < shiv@toxsl.com >
 */

/**
 * This is the model base class for the table "{{paypal_info}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PaypalInfo".
 *
 * Columns in table "{{paypal_info}}" available as properties of the model,
 * followed by relations of table "{{paypal_info}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $email
 * @property string $password
 * @property string $credit_card_no
 * @property integer $type_id
 * @property integer $state_id
 * @property integer $create_user_id
 * @property string $create_time
 *
 * @property User $createUser
 */
abstract class BasePaypalInfo extends ActiveRecord {

	public static function getTypeOptions($id = null)
	{
		$list = array("Businees Account","Primary Account");
		if ($id == null )	return $list;
		if ( is_numeric($id)) return $list [$id];
		return $id;
	}

	public static function getStatusOptions($id = null)
	{
		$list = array("Draft","Published","Archive");
		if ($id == null )	return $list;
		if ( is_numeric( $id )) return $list [ $id ];
		return $id;
	}
	public function beforeValidate()
	{
		if($this->isNewRecord)
		{
			if ( !isset( $this->create_user_id )) $this->create_user_id = Yii::app()->user->id;
			if ( !isset( $this->create_time )) $this->create_time = new CDbExpression('NOW()');
		}else{
		}
		return parent::beforeValidate();
	}

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{paypal_info}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PaypalInfo|PaypalInfos', $n);
	}

	public static function representingColumn() {
		return 'create_time';
	}

	public function rules() {
		return array(
				array('create_user_id, create_time', 'required'),
				array('type_id, state_id, create_user_id', 'numerical', 'integerOnly'=>true),
				array('email, password, credit_card_no', 'length', 'max'=>64),
				array('email, password, credit_card_no, type_id, state_id', 'default', 'setOnEmpty' => true, 'value' => null),
				array('id, email, password, credit_card_no, type_id, state_id, create_user_id, create_time', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
				'createUser' => array(self::BELONGS_TO, 'User', 'create_user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
				'id' => Yii::t('app', 'ID'),
				'email' => Yii::t('app', 'Email'),
				'password' => Yii::t('app', 'Password'),
				'credit_card_no' => Yii::t('app', 'Credit Card No'),
				'type_id' => Yii::t('app', 'Type'),
				'state_id' => Yii::t('app', 'State'),
				'create_user_id' => null,
				'create_time' => Yii::t('app', 'Create Time'),
				'createUser' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('credit_card_no', $this->credit_card_no, true);
		$criteria->compare('type_id', $this->type_id);
		$criteria->compare('state_id', $this->state_id);
		$criteria->compare('create_user_id', $this->create_user_id);
		$criteria->compare('create_time', $this->create_time, true);

		return new CActiveDataProvider($this, array(
				'criteria' => $criteria,
		));
	}
}